{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/network/dataServices/SigninDataService\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\n\nfunction LoginComponent_span_15_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", \"Email is Required\", \" \");\n  }\n}\n\nfunction LoginComponent_span_15_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", \"Enter a Valid Email\", \" \");\n  }\n}\n\nfunction LoginComponent_span_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtemplate(1, LoginComponent_span_15_span_1_Template, 2, 1, \"span\", 20);\n    i0.ɵɵtemplate(2, LoginComponent_span_15_span_2_Template, 2, 1, \"span\", 20);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.loginForm.controls[\"email\"].errors[\"required\"] && ctx_r0.submitted);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.loginForm.controls[\"email\"].errors[\"email\"] && ctx_r0.submitted);\n  }\n}\n\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(_SignInDataService, router) {\n      this._SignInDataService = _SignInDataService;\n      this.router = router;\n      this.loginForm = new FormGroup({\n        email: new FormControl('', [Validators.required, Validators.email]),\n        password: new FormControl('', [Validators.required])\n      });\n      this.submitted = false;\n    }\n\n    ngOnInit() {}\n\n    login() {\n      this._SignInDataService.queryTheServer({\n        email: this.loginForm.value.email,\n        password: this.loginForm.value.password\n      }).subscribe({\n        next: resp => {\n          const data = resp;\n          localStorage.setItem('loginId', data.loginId);\n          localStorage.setItem('isChef', data.chef);\n\n          if (this._SignInDataService.redirectUrl) {\n            this.router.navigate([this._SignInDataService.redirectUrl]);\n            return;\n          }\n\n          if (data.chef) {\n            console.log(data.chef);\n\n            if (!data.chefProfile) {\n              console.log(data.chef);\n              console.log(data.chefProfile);\n              this.router.navigate(['/chefprofilesetup']);\n              return;\n            }\n\n            console.log(data.chef);\n            console.log(data.chefProfile);\n            this.router.navigate(['/createmenu']);\n          } else {\n            this.router.navigate(['/EnterZipCode']);\n          }\n        },\n        error: err => {\n          console.log(err);\n          alert('Please enter the correct details'); //alert(err.error.errormessage)\n        }\n      });\n    }\n\n  }\n\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.SignInDataService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 41,\n    vars: 2,\n    consts: [[\"name\", \"viewport\", \"content\", \"width=device-width, initial-scale=1\"], [1, \"container\", 2, \"margin-top\", \"45px\"], [2, \"text-align\", \"center\"], [1, \"container\", 2, \"margin-bottom\", \"600px\"], [1, \"col-md-6\", \"col-md-offset-3\"], [\"id\", \"login\", 1, \"form\", 3, \"formGroup\"], [1, \"form__input-group\"], [\"formControlName\", \"email\", \"type\", \"text\", \"autofocus\", \"\", \"placeholder\", \"Email \\u2217\", \"required\", \"\", 1, \"form__input\"], [4, \"ngIf\"], [1, \"form__input-error-message\"], [\"formControlName\", \"password\", \"type\", \"password\", \"pattern\", \"(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\", \"title\", \"Must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters\", \"autofocus\", \"\", \"placeholder\", \"Password \\u2217\", \"required\", \"\", 1, \"form__input\"], [2, \"margin-left\", \"100px\"], [\"type\", \"checkbox\", \"check\", \"check\", \"name\", \"remember\"], [1, \"psw\"], [\"routerLink\", \"/forgotpassword\"], [2, \"margin-left\", \"170px\"], [\"type\", \"checkbox\", \"check\", \"check\", \"name\", \"agree\", \"required\", \"\", 2, \"margin-top\", \"30px\"], [\"routerLink\", \"/Terms\"], [\"type\", \"submit\", 2, \"margin-left\", \"170px\", 3, \"click\"], [\"routerLink\", \"/Signup\"], [\"class\", \"loginFormError\", 4, \"ngIf\"], [1, \"loginFormError\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"html\")(1, \"head\");\n        i0.ɵɵelement(2, \"meta\", 0);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"body\")(4, \"div\", 1)(5, \"h2\", 2);\n        i0.ɵɵtext(6, \" Please login to your account!\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"div\", 3)(8, \"div\", 4)(9, \"form\", 5);\n        i0.ɵɵelement(10, \"br\");\n        i0.ɵɵelementStart(11, \"h2\", 2);\n        i0.ɵɵtext(12, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 6);\n        i0.ɵɵelement(14, \"input\", 7);\n        i0.ɵɵtemplate(15, LoginComponent_span_15_Template, 3, 2, \"span\", 8);\n        i0.ɵɵelement(16, \"div\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 6);\n        i0.ɵɵelement(18, \"input\", 10)(19, \"div\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"label\", 11);\n        i0.ɵɵelement(21, \"input\", 12);\n        i0.ɵɵtext(22, \" Remember me \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"span\", 13)(24, \"a\", 14);\n        i0.ɵɵtext(25, \"FORGOT PASSWORD?\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(26, \"br\")(27, \"br\");\n        i0.ɵɵelementStart(28, \"label\", 15);\n        i0.ɵɵelement(29, \"input\", 16);\n        i0.ɵɵtext(30, \" I agree to follow the \");\n        i0.ɵɵelementStart(31, \"a\", 17);\n        i0.ɵɵtext(32, \"Terms and Conditions.\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(33, \"button\", 18);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_33_listener() {\n          return ctx.login();\n        });\n        i0.ɵɵtext(34, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(35, \"br\");\n        i0.ɵɵelementStart(36, \"p\");\n        i0.ɵɵtext(37, \"Don't have an account yet? \");\n        i0.ɵɵelementStart(38, \"a\", 19);\n        i0.ɵɵtext(39, \"Sign Up\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(40, \"br\");\n        i0.ɵɵelementEnd()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.loginForm.controls[\"email\"].errors);\n      }\n    },\n    directives: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.DefaultValueAccessor, i3.NgControlStatus, i3.FormControlName, i3.RequiredValidator, i4.NgIf, i3.PatternValidator, i2.RouterLinkWithHref],\n    styles: [\"form[_ngcontent-%COMP%]{border:3px solid #f1f1f1;height:500px}input[type=text][_ngcontent-%COMP%], input[type=password][_ngcontent-%COMP%]{width:70%;padding:12px 20px;margin:18px 100px;display:inline-block;border:1px solid #ccc}button[_ngcontent-%COMP%]{background-color:#f6c515;color:#fff;padding:14px 20px;margin:18px 0;border:none;cursor:pointer;width:50%}button[_ngcontent-%COMP%]:hover{opacity:.8}span.psw[_ngcontent-%COMP%]{margin-left:140px}p[_ngcontent-%COMP%]{margin-left:200px}a[_ngcontent-%COMP%]{color:#00f}.loginFormError[_ngcontent-%COMP%]{color:red!important;font-size:12px;float:left;padding-top:5px;margin-left:70px}\", \"@media screen and (max-width: 600px) {\\n      .column[_ngcontent-%COMP%] {\\n        width: 100%;\\n      }\\n    }\\n\\n    @media screen and (max-width: 600px) {\\n      .topnav[_ngcontent-%COMP%]   .search-container[_ngcontent-%COMP%] {\\n        float: none;\\n      }\\n\\n      .topnav[_ngcontent-%COMP%]   a[_ngcontent-%COMP%], .topnav[_ngcontent-%COMP%]   input[type=text][_ngcontent-%COMP%], .topnav[_ngcontent-%COMP%]   .search-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n        float: none;\\n        display: block;\\n        text-align: left;\\n        width: 100%;\\n        margin: 0;\\n        padding: 14px;\\n      }\\n\\n      .topnav[_ngcontent-%COMP%]   input[type=text][_ngcontent-%COMP%] {\\n        border: 1px solid #ccc;\\n      }\\n\\n    }\"]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}